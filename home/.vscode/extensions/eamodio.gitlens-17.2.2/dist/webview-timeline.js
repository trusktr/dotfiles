exports.id=696,exports.ids=[696],exports.modules={5101:(e,t,i)=>{i.d(t,{v:()=>SubscriptionManager});let SubscriptionManager=class SubscriptionManager{constructor(e,t){this.source=e,this.subscribe=t}_status="stopped";get status(){return this._status}_subscription;dispose(){this.stop()}start(){(null==this._subscription||"started"!==this._status)&&(this._subscription=this.subscribe(this.source),this._status="started")}pause(){this.stop("paused")}resume(){this.start()}stop(e){this._subscription?.dispose(),this._subscription=void 0,this._status=e??"stopped"}}},9784:(e,t,i)=>{i.d(t,{TimelineWebviewProvider:()=>TimelineWebviewProvider});var s=i(1398),o=i(6378),r=i(2863),a=i(4067),n=i(8679),h=i(1630),c=i(3715),l=i(3882),p=i(58),u=i(738),d=i(7144),g=i(3262),y=i(8297),m=i(396),b=i(3337),v=i(1441),f=i(1538),w=i(3349),_=i(9225),S=i(1687),C=i(409),D=i(6866),T=i(8583),x=i(5783),B=i(7106),P=i(4322),R=i(8492),A=i(1212),F=i(5101),M=i(6241),W=i(3807),O=i(1953),k=i(7938);let E="timeline",H=new k.Oz(E,"ref/choose"),U=new k.Oz(E,"path/choose"),Y=new k.Q2(E,"point/open"),z=new k.Q2(E,"config/update"),I=new k.Q2(E,"scope/update"),V=new k.C1(E,"didChange");var G=i(9220),$=Object.defineProperty,j=Object.getOwnPropertyDescriptor,L=e=>{throw TypeError(e)},K=(e,t,i,s)=>{for(var o,r=s>1?void 0:s?j(t,i):t,a=e.length-1;a>=0;a--)(o=e[a])&&(r=(s?o(t,i,r):o(r))||r);return s&&r&&$(t,i,r),r};let TimelineWebviewProvider=class TimelineWebviewProvider{constructor(e,t){this.container=e,this.host=t,this._context={config:{period:"3|M",showAllBranches:!1,sliceBy:"author"},scope:void 0,etags:{repositories:this.container.git.etag,repository:void 0,repositoryWip:void 0,subscription:this.container.subscription.etag}},this.host.is("view")&&(this.host.description=o.lD)}_context;_disposable;_cache=new A.o({accessTTL:3e5});get activeTabUri(){return(0,S.ek)(s.window.tabGroups.activeTabGroup.activeTab)}dispose(){this._cache.clear(),this._disposable?.dispose()}canReuseInstance(...e){let t,[i]=e;if(null!=i)(0,G.ut)(i)?t=i:(0,O.c)(i)&&i.state.scope?.uri!=null&&(t=(0,G.Tf)(i.state.scope));else{let e=this.activeTabUri;null!=e&&(t={type:"file",uri:e})}return(0,G.Fp)(t,this._context.scope)}getSplitArgs(){return null!=this._context.scope?[this._context.scope]:[]}getTelemetryContext(){return{...this.host.getTelemetryContext(),"context.period":this._context.config.period,"context.scope.hasHead":this._context.scope?.head!=null,"context.scope.hasBase":this._context.scope?.base!=null,"context.scope.type":this._context.scope?.type,"context.showAllBranches":this._context.config.showAllBranches,"context.sliceBy":this._context.config.sliceBy}}async onShowing(e,t,...i){let o,[r]=i;if(null!=r&&((0,G.ut)(r)?o=r:(0,O.c)(r)&&null!=r.state.scope&&(this._context.config={...this._context.config,...r.state.config},this.host.is("editor")&&(o={type:r.state.scope.type,uri:s.Uri.parse(r.state.scope.uri),head:r.state.scope.head}))),null==o){let e=await (0,a.G)(this.container,this.activeTabUri);null!=e?o={type:"file",uri:e}:this.host.is("editor")&&null!=(e=this.container.git.getBestRepositoryOrFirst()?.uri)&&(o={type:"repo",uri:e})}let n=await this.updateScope(o,!0,!0);e||!n&&this.host.visible||this.updateState();let h=(0,B.Bq)(f.H.get("visualHistory"),"context.config",{joinArrays:!0});return[!0,{...this.getTelemetryContext(),...h}]}includeBootstrap(){return this._cache.get("bootstrap",()=>this.getState(this._context,!1))}registerCommands(){let e=[];return this.host.is("view")&&e.push((0,v.Lb)(`${this.host.id}.refresh`,()=>this.host.refresh(!0),this),(0,v.Lb)(`${this.host.id}.openInTab`,()=>{this._context.scope?.type==="file"&&((0,v.RS)("gitlens.visualizeHistory",this._context.scope),this.container.telemetry.sendEvent("timeline/action/openInEditor",{...this.getTelemetryContext(),"scope.type":this._context.scope.type,"scope.hasHead":null!=this._context.scope.head,"scope.hasBase":null!=this._context.scope.base}))},this)),e}onActiveChanged(e){e&&this.fireFileSelected()}async onReady(){await this.updateScope(this._context.scope,!0),this.updateState(!0)}onRefresh(e){this._cache.clear()}async onVisibilityChanged(e){if(!e){this._disposable?.dispose(),this._repositorySubscription?.pause();return}if(this._repositorySubscription?.resume(),this.host.is("editor"))this._disposable=s.Disposable.from(this.container.subscription.onDidChange(this.onSubscriptionChanged,this));else{this._disposable=s.Disposable.from(this.container.subscription.onDidChange(this.onSubscriptionChanged,this),this.container.git.onDidChangeRepositories(this.onRepositoriesChanged,this),s.window.tabGroups.onDidChangeTabGroups(this.onTabsChanged,this),s.window.tabGroups.onDidChangeTabs(this.onTabsChanged,this),this.container.events.on("file:selected",(0,T.s)(this.onFileSelected,250),this));let e=await (0,a.G)(this.container,this.activeTabUri);this.updateScope(e?{type:"file",uri:e}:void 0)}}_openingDataPoint;_pendingOpenDataPoint;onMessageReceived(e){switch(!0){case U.is(e):this.onMessageChoosePath(e);break;case H.is(e):this.onMessageChooseRef(e);break;case Y.is(e):this.onMessageSelectDataPoint(e);break;case z.is(e):this.onMessageUpdateConfig(e);break;case I.is(e):this.onMessageUpdateScope(e)}}async onMessageChoosePath(e){let{repoUri:t,ref:i,title:s,initialPath:o}=e.params,r=this.container.git.getRepository(t);if(null==r)return void this.host.respond(U,e,{picked:void 0});let a=await (0,b.G)(this.container,(0,d.kA)(i?.ref??"HEAD",r.path),{allowFolders:!0,initialPath:o,title:s});this.host.respond(U,e,{picked:null!=a?{type:a.type,relativePath:this.container.git.getRelativePath(a.uri,r.uri)}:void 0})}async onMessageChooseRef(e){var t,i,s,o,r,a=[];try{let t,i=((e,t,i)=>{if(null!=t){var s,o;let r,a;"object"!=typeof t&&"function"!=typeof t&&L("Object expected"),void 0===s&&(s=t[r="dispose",(a=Symbol[r])?a:Symbol.for("Symbol."+r)]),"function"!=typeof s&&L("Object not disposable"),o&&(s=function(){try{o.call(this)}catch(e){return Promise.reject(e)}}),e.push([i,s,t])}else i&&e.push([i]);return t})(a,(0,M.Nx)(()=>void this.host.respond(H,e,t))),{scope:s}=this._context;if(null==s||null==e.params.scope)return;let o=this.container.git.getRepository(e.params.scope.uri);if(null==o)return;(0,G.bt)(e.params.scope,s)||await this.updateScope((0,G.Tf)(e.params.scope));let r="base"===e.params.type?s.base:s.head,n=await (0,m.nA)(o.path,"base"===e.params.type?"Choose a Base Reference":"Choose a Head Reference","base"===e.params.type?"Choose a reference (branch, tag, etc) as the base to view history from":"Choose a reference (branch, tag, etc) as the head to view history for",{allowRevisions:!0,picked:r?.ref,include:m.m7.BranchesAndTags|m.m7.HEAD|(o.virtual||this._context.config.showAllBranches||"base"===e.params.type?0:m.m7.AllBranches),sort:!0});if(n.directive===y.WL.RefsAllBranches){t={type:e.params.type,ref:null},i.dispose();return}if(null==n.value)return;n.value.ref,r=(0,c.of)(n.value),t={type:e.params.type,ref:r},i.dispose()}catch(e){var n=e,h=!0}finally{t=n,i=h,s="function"==typeof SuppressedError?SuppressedError:function(e,t,i,s){return(s=Error(i)).name="SuppressedError",s.error=e,s.suppressed=t,s},o=e=>t=i?new s(e,t,"An error was suppressed during disposal"):(i=!0,e),(r=e=>{for(;e=a.pop();)try{var s=e[1]&&e[1].call(e[2]);if(e[0])return Promise.resolve(s).then(r,e=>(o(e),r()))}catch(e){o(e)}if(i)throw t})()}}async onMessageSelectDataPoint(e){if(null!=e.params.scope&&null!=e.params.id){if(this._openingDataPoint){this._pendingOpenDataPoint=e.params;return}this._openingDataPoint=e.params;try{await this.openDataPoint(e.params)}finally{let e=this._openingDataPoint;if(this._openingDataPoint=void 0,this._pendingOpenDataPoint){let t=this._pendingOpenDataPoint;this._pendingOpenDataPoint=void 0,(t.id!==e?.id||t.shift!==e?.shift)&&this.openDataPoint(t)}}}}onMessageUpdateConfig(e){let{config:t}=this._context,i=!1,{changes:s}=e.params;null!=s.period&&s.period!==t.period&&(i=!0,t.period=s.period),null!=s.showAllBranches&&s.showAllBranches!==t.showAllBranches&&(i=!0,t.showAllBranches=s.showAllBranches,"branch"!==t.sliceBy||t.showAllBranches||(t.sliceBy="author")),null!=s.sliceBy&&s.sliceBy!==t.sliceBy&&(i=!0,t.sliceBy=s.sliceBy,"branch"!==t.sliceBy||t.showAllBranches||(t.showAllBranches=!0)),i&&(this.container.telemetry.sendEvent("timeline/config/changed",{...this.getTelemetryContext(),period:t.period,showAllBranches:t.showAllBranches,sliceBy:t.sliceBy}),this._cache.clear(),this.updateState(!0))}onMessageUpdateScope(e){if(null==e.params.scope)return;let t=this.container.git.getRepository(e.params.scope.uri);if(null==t)return;let i=(0,G.Tf)(e.params.scope),{changes:{type:s,head:o,base:r,relativePath:a}}=e.params,n=!1;if(null!=s&&s!==i.type&&(n=!0,i.type=s,"repo"===s&&(i.uri=t.uri)),void 0!==o&&(n=!0,i.head=o??void 0),void 0!==r&&(n=!0,i.base=r??void 0),null!=a&&(n=!0,i.uri=this.container.git.getAbsoluteUri(a,t.uri)),this.host.is("view")||e.params.altOrShift){(0,v.RS)("gitlens.visualizeHistory",i),this.container.telemetry.sendEvent("timeline/action/openInEditor",{...this.getTelemetryContext(),"scope.type":i.type,"scope.hasHead":null!=i.head,"scope.hasBase":null!=i.base});return}n&&this.updateScope(i)}_tabCloseDebounceTimer;async onTabsChanged(e){null!=this._tabCloseDebounceTimer&&(clearTimeout(this._tabCloseDebounceTimer),this._tabCloseDebounceTimer=void 0);let t=await (0,a.G)(this.container,this.activeTabUri);if(null==t){this._tabCloseDebounceTimer=setTimeout(async()=>{this._tabCloseDebounceTimer=void 0,await this.updateScope(t,void 0,!0)&&this.container.telemetry.sendEvent("timeline/editor/changed",this.getTelemetryContext())},1e3);return}await this.updateScope(t?{type:"file",uri:t}:void 0,void 0,!0)&&this.container.telemetry.sendEvent("timeline/editor/changed",this.getTelemetryContext())}async onFileSelected(e){if(null==e.data)return;let t=e.data.uri;null==t||this.container.git.isTrackable(t)||(t=void 0),t=await (0,a.G)(this.container,t??this.activeTabUri),await this.updateScope(t?{type:"file",uri:t}:void 0,void 0,!0)&&this.container.telemetry.sendEvent("timeline/editor/changed",this.getTelemetryContext())}fireFileSelected(){this._context.scope?.type==="file"&&this.host.is("editor")&&this.container.events.fire("file:selected",{uri:this._context.scope.uri,preserveFocus:!0,preserveVisibility:!1},{source:this.host.id})}onRepositoriesChanged(e){this._context.etags.repositories!==e.etag&&this.updateScope(this._context.scope)}onRepositoryChanged(e){e.changed(n.Z_.Heads,n.Z_.Index,n.Ti.Any)&&this._context.etags.repository!==e.repository.etag&&this.updateScope(this._context.scope)}onRepositoryWipChanged(e){if(e.repository.id!==this._repositorySubscription?.source?.id||this._context.etags.repositoryWip===e.repository.etagFileSystem)return;let t=this._context.scope?.uri;null!=t&&(e.uris.has(t)||(0,x.zN)(e.uris,e=>(0,w.K9)(e,t)))?this.updateScope(this._context.scope):this._context.etags.repositoryWip=e.repository.etagFileSystem}onSubscriptionChanged(e){this._context.etags.subscription!==e.etag&&this.updateScope(this._context.scope)}async getState(e,t){let i=f.H.get("defaultDateFormat")??"MMMM Do, YYYY h:mma",s=f.H.get("defaultDateShortFormat")??"short",{git:o}=this.container,{scope:r}=e,a={...e.config,abbreviatedShaLength:this.container.CommitShaFormatting.length,dateFormat:i,shortDateFormat:s};o.isDiscoveringRepositories&&await o.isDiscoveringRepositories;let n=r?.uri!=null?o.getRepository(r.uri)??await o.getOrOpenRepository(r.uri,{closeOnOpen:!0}):void 0,h=await o.access("timeline",n?.uri);if(null==r||null==n)return{...this.host.baseWebviewState,dataset:void 0,config:a,scope:void 0,repository:void 0,access:h};let{uri:p}=r,u=o.getRelativePath(p,n.uri),d=(0,c.of)(await n.git.branches.getBranch()),g=null!=n?{...(0,l.Pv)(n),ref:d}:void 0;return r.head??=d,null==r.base&&(r.base??=r.head),{...this.host.baseWebviewState,dataset:t?this.getDataset(r,n,e.config,h):void 0,config:a,scope:(0,G.E_)(r,u),repository:g,access:h}}async getDataset(e,t,i,s){let o;if(!1===s.allowed)return function(e){let t=[],i=["Eric Amodio","Justin Roberts","Keith Daulton","Ramin Tadayon","Ada Lovelace","Grace Hopper"];for(let s=0;s<10;s++){let o=new Date(new Date().getTime()-Math.floor(7776e6*Math.random())),r=i[Math.floor(Math.random()*i.length)],a=0===s?2:9===s?50:Math.floor(20*Math.random())+1,n=0===s?1:9===s?25:Math.floor(20*Math.random())+1;t.push({sha:Math.random().toString(16).substring(2,10),author:r,date:o.toISOString(),message:`Commit message for changes by ${r}`,files:"file"===e?void 0:Math.floor(Math.random()*(a+n))+1,additions:a,deletions:n,sort:o.getTime()})}return t.sort((e,t)=>t.sort-e.sort)}(e.type);i.showAllBranches||((o=e.head?.ref)?e.base?.ref!=null&&e.base?.ref!==o&&(o=(0,g.Xn)(o,e.base?.ref,"..")):o=e.base?.ref);let[r,a,n]=await Promise.allSettled([t.git.contributors.getContributors(o,{all:i.showAllBranches,pathspec:"repo"===e.type?void 0:e.uri.fsPath,since:(function(e){let t;if("all"===e)return;let[i,s]=e.split("|");switch(s){case"D":t=(0,C.Tl)(new Date,{days:-parseInt(i,10)});break;case"M":t=(0,C.Tl)(new Date,{months:-parseInt(i,10)});break;case"Y":t=(0,C.Tl)(new Date,{years:-parseInt(i,10)});break;default:t=(0,C.Tl)(new Date,{months:-3})}return t.getHours()>=12&&t.setDate(t.getDate()+1),t.setHours(0,0,0,0),t})(i.period)?.toISOString(),stats:!0}),t.virtual?void 0:"repo"!==e.type?t.git.status.getStatusForPath?.(e.uri,{renames:"file"===e.type}):t.git.status.getStatus().then(e=>e?.files),t.git.config.getCurrentUser()]),h=(0,R.Ro)(n),c=h?.name?`${h.name} (you)`:"You",l=[],d=(0,R.Ro)(r);if(null!=d){for(let e of d.contributors)if(null!=e.contributions)for(let t of e.contributions)l.push({author:e.current?c:e.name,sha:t.sha,date:t.date.toISOString(),message:t.message,files:t.files,additions:t.additions,deletions:t.deletions,sort:t.date.getTime()})}if(i.showAllBranches&&"branch"===i.sliceBy&&"repo"!==e.type&&!t.virtual){let i=new Set(await t.git.commits.getLogShas?.(`^${e.head?.ref??"HEAD"}`,{all:!0,pathOrUri:e.uri,limit:0})),s=l.filter(e=>i.has(e.sha));await (0,R.vA)(s,10,async e=>{e.branches=await t.git.branches.getBranchesWithCommits([e.sha],void 0,{all:!0,mode:"contains"})})}let y=(0,R.Ro)(a),m=this.container.git.getRelativePath(e.uri,t.uri),b=await (0,p.S)(this.container,y,m,h);return b?.length?l.splice(0,0,...(0,x.Tj)(b,t=>(function(e,t,i){var s;let o,r,a,n=(s=e,"file"===t?s.file?.stats??(1===(0,u.Zx)(s.stats?.files)?s.stats:void 0):s.stats);return null!=n&&({additions:o,deletions:r}=n),"file"===t?a=void 0:null!=e.stats&&(a=(0,u.Zx)(e.stats.files)),{author:"You"===e.author.name?i:e.author.name,files:a,additions:o,deletions:r,sha:e.sha,date:e.date.toISOString(),message:e.message??e.summary,sort:e.date.getTime()}})(t,e.type,c))):l.length&&l.splice(0,0,{author:l[0].author,files:0,additions:0,deletions:0,sha:"",date:new Date().toISOString(),message:"Working Tree",sort:Date.now()}),l.sort((e,t)=>t.sort-e.sort),l}async openDataPoint(e){if(null==e.scope)return;let t=this.container.git.getRepository(e.scope.uri);if(null==t)return;this.container.telemetry.sendEvent("timeline/commit/selected",this.getTelemetryContext());let i=await t.git.commits.getCommit(e.id||h.SU);if(null==i)return;function o(e,t){return(0,g._k)(t)?(0,g.KH)(t)?t=>!!t.staged&&(0,w.K9)(t.uri,e):t=>!t.staged&&(0,w.K9)(t.uri,e):t=>(0,w.K9)(t.uri,e)}i.hasFullDetails()||await i.ensureFullDetails({include:{uncommittedFiles:!0}}),this.container.events.fire("commit:selected",{commit:i,interaction:"active",preserveFocus:!0,preserveVisibility:!1},{source:this.host.id});let{type:a,uri:n}=(0,G.Tf)(e.scope);switch(a){case"folder":case"repo":e.shift?await (0,r.Qv)(this.container,i,!1,{preserveFocus:!0,preview:!0,sourceViewColumn:this.host.viewColumn,viewColumn:this.host.is("view")?void 0:s.ViewColumn.Beside,title:`Folder Changes in ${(0,g.pV)(i.sha,{strings:{working:"Working Tree"}})}`},"folder"===a?o(n,i.sha):void 0):await (0,r.P3)(this.container,i,!1,{preserveFocus:!0,preview:!0,sourceViewColumn:this.host.viewColumn,viewColumn:this.host.is("view")?void 0:s.ViewColumn.Beside,title:`Folder Changes in ${(0,g.pV)(i.sha,{strings:{working:"Working Tree"}})}`},"folder"===a?o(n,i.sha):void 0);break;case"file":if(i.isUncommitted&&!i.isUncommittedStaged&&!i.anyFiles?.some(e=>e.uri.fsPath===n.fsPath)){(0,_.zu)(n,{preserveFocus:!0,preview:!0,viewColumn:this.host.is("view")?void 0:s.ViewColumn.Beside});break}e.shift?await (0,r.DD)(n,i,{preserveFocus:!0,preview:!0,viewColumn:this.host.is("view")?void 0:s.ViewColumn.Beside}):await (0,r.eX)(n,i,{preserveFocus:!0,preview:!0,viewColumn:this.host.is("view")?void 0:s.ViewColumn.Beside})}}_repositorySubscription;async updateScope(e,t,i){var s,r;null!=this._tabCloseDebounceTimer&&(clearTimeout(this._tabCloseDebounceTimer),this._tabCloseDebounceTimer=void 0);let a={repositories:this.container.git.etag,repository:void 0,repositoryWip:void 0,subscription:this.container.subscription.etag},n="";if(null!=e){this.container.git.isDiscoveringRepositories&&await this.container.git.isDiscoveringRepositories;let t=this.container.git.getRepository(e.uri);this._repositorySubscription?.source!==t&&(this._repositorySubscription?.dispose(),this._repositorySubscription=void 0),null!=t&&((0,W.A)(e.uri,t.uri)&&(e.type="repo",e.head??=(0,c.of)(await t.git.branches.getBranch())),this._repositorySubscription??=new F.v(t,e=>this.subscribeToRepository(e)),"file"===e.type||"folder"===e.type?(n=(0,P.P8)(this.container.git.getRelativePath(e.uri,t.uri)),e.head&&(n+=` (${e.head.ref})`),this.container.git.repositoryCount>1&&(n+=` \u2022 ${t.name}`)):e.head?(n+=e.head.name,this.container.git.repositoryCount>1&&(n+=` \u2022 ${t.name}`)):n=t.name),a.repository=t?.etag??0,a.repositoryWip=t?.etagFileSystem??0}else this._repositorySubscription?.dispose(),this._repositorySubscription=void 0,a.repository=0,a.repositoryWip=0;return this.host.visible&&this._repositorySubscription?.start(),s=this._context.etags,r=a,!(s.repositories===r.repositories&&s.repository===r.repository&&s.repositoryWip===r.repositoryWip&&s.subscription===r.subscription&&(i?(0,G.Fp)(e,this._context.scope):(0,G.bt)(e,this._context.scope)))&&(this._cache.clear(),this._context.scope=e,this._context.etags=a,this.host.is("editor")?this.host.title=n||"Visual History":this.host.description=n||o.lD,this.fireFileSelected(),this.container.telemetry.sendEvent("timeline/scope/changed",this.getTelemetryContext()),t||this.updateState(),!0)}subscribeToRepository(e){return s.Disposable.from(e.watchFileSystem(1e3),e.onDidChangeFileSystem(this.onRepositoryWipChanged,this),e.onDidChange(this.onRepositoryChanged,this))}_notifyDidChangeStateDebounced=void 0;updateState(e=!1){if(e)return void this.notifyDidChangeState();this._notifyDidChangeStateDebounced??=(0,T.s)(this.notifyDidChangeState.bind(this),500),this._notifyDidChangeStateDebounced()}async notifyDidChangeState(){this._notifyDidChangeStateDebounced?.cancel();let e=await this._cache.get("state",()=>this.getState(this._context,!0));return this.host.notify(V,{state:e})}};K([(0,D.Yz)({args:!1})],TimelineWebviewProvider.prototype,"onTabsChanged",1),K([(0,D.Yz)({args:!1})],TimelineWebviewProvider.prototype,"onFileSelected",1),K([(0,D.Yz)({args:!1})],TimelineWebviewProvider.prototype,"onRepositoriesChanged",1),K([(0,D.Yz)({args:!1})],TimelineWebviewProvider.prototype,"onRepositoryChanged",1),K([(0,D.Yz)({args:!1})],TimelineWebviewProvider.prototype,"onRepositoryWipChanged",1),K([(0,D.Yz)({args:!1})],TimelineWebviewProvider.prototype,"onSubscriptionChanged",1),K([(0,D.Yz)({args:!1})],TimelineWebviewProvider.prototype,"getState",1),K([(0,D.Yz)()],TimelineWebviewProvider.prototype,"updateState",1),K([(0,D.Yz)()],TimelineWebviewProvider.prototype,"notifyDidChangeState",1)}};