exports.id=624,exports.ids=[624],exports.modules={333:(e,n,t)=>{t.d(n,{GitCodeLensProvider:()=>GitCodeLensProvider});var i=t(1398),s=t(6378),o=t(33),r=t(1441),a=t(1538),l=t(7892),c=t(2261),u=t(5783),d=t(1881),m=t(943),g=t(4066),h=e=>{throw TypeError(e)};let GitRecentChangeCodeLens=class GitRecentChangeCodeLens extends i.CodeLens{constructor(e,n,t,i,s,o,r,a,l,c){super(a,c),this.languageId=e,this.symbol=n,this.uri=t,this.dateFormat=i,this.blame=s,this.blameRange=o,this.isFullRange=r,this.desiredCommand=l}getBlame(){return this.blame?.()}};let GitAuthorsCodeLens=class GitAuthorsCodeLens extends i.CodeLens{constructor(e,n,t,i,s,o,r,a){super(r),this.languageId=e,this.symbol=n,this.uri=t,this.blame=i,this.blameRange=s,this.isFullRange=o,this.desiredCommand=a}getBlame(){return this.blame()}};let GitCodeLensProvider=class GitCodeLensProvider{constructor(e){this.container=e}static selector=[...(0,u.Tj)(s.MV,e=>({scheme:e}))];_onDidChangeCodeLenses=new i.EventEmitter;get onDidChangeCodeLenses(){return this._onDidChangeCodeLenses.event}dispose(){this._onDidChangeCodeLenses.dispose()}reset(){this._onDidChangeCodeLenses.fire()}async provideCodeLenses(e,n){var t,s,o,u,g,y=[];try{let t,s;if(e.isDirty&&(0,l.QK)(e.uri))return[];let o=((e,n,t)=>{if(null!=n){var i,s;let o,r;"object"!=typeof n&&"function"!=typeof n&&h("Object expected"),void 0===i&&(i=n[o="dispose",(r=Symbol[o])?r:Symbol.for("Symbol."+o)]),"function"!=typeof i&&h("Object not disposable"),s&&(i=function(){try{s.call(this)}catch(e){return Promise.reject(e)}}),e.push([t,i,n])}else t&&e.push([t]);return n})(y,(0,m.bP)(`${(0,d.zu)(this)}.provideCodeLenses(${d.Vy.toLoggable(e)})`,!1)),u=await this.container.documentTracker.getOrAdd(e),g=await u.getStatus();if(!g.blameable)return[];let p=!1;e.isDirty&&!g.dirtyIdle&&(p=!0);let b=a.H.get("codeLens",e),f={...b.scopesByLanguage?.find(n=>n.language?.toLowerCase()===e.languageId)};null==f&&(f={language:e.languageId}),null==f.scopes&&(f.scopes=b.scopes),null==f.symbolScopes&&(f.symbolScopes=b.symbolScopes),f.symbolScopes=null!=f.symbolScopes?f.symbolScopes=f.symbolScopes.map(e=>e.toLowerCase()):[];let C=[],S=u.uri;if(p){if(1!==f.scopes.length||!f.scopes.includes("document")){let n;if([n,s]=await Promise.all([this.container.git.isTracked(S),(0,r.S4)("vscode.executeDocumentSymbolProvider",e.uri)]),!n)return C}}else if(n.isCancellationRequested||(1===f.scopes.length&&f.scopes.includes("document")?t=await this.container.git.getBlame(S,e):[t,s]=await Promise.all([this.container.git.getBlame(S,e),(0,r.S4)("vscode.executeDocumentSymbolProvider",e.uri)]),null==t||t?.lines.length===0))return C;if(n.isCancellationRequested)return C;let v=(0,c.Oo)(()=>e.validateRange(new i.Range(0,0,1e6,1e6))),w=p?{command:void 0,title:this.getDirtyTitle(b)}:void 0;if(void 0!==s)for(let n of(d.Vy.log(o,`${s.length} symbol(s) found`),s))this.provideCodeLens(C,e,n,f,v,t,S,b,p,w);if((f.scopes.includes("document")||f.symbolScopes.includes("file"))&&!f.symbolScopes.includes("!file")&&null==C.find(e=>0===e.range.start.line&&0===e.range.end.line)){let n,s=v();if(p||b.recentChange.enabled){p||(n=(0,c.Oo)(()=>this.container.git.getBlameRange(t,S,s)));let o=new i.SymbolInformation(S.fileName,i.SymbolKind.File,"",new i.Location(S.documentUri(),new i.Range(0,0,0,s.start.character)));C.push(new GitRecentChangeCodeLens(e.languageId,o,S,b.dateFormat,n,s,!0,K(o),b.recentChange.command,w))}if(!p&&b.authors.enabled){void 0===n&&(n=(0,c.Oo)(()=>this.container.git.getBlameRange(t,S,s)));let o=new i.SymbolInformation(S.fileName,i.SymbolKind.File,"",new i.Location(S.documentUri(),new i.Range(0,1,0,s.start.character)));C.push(new GitAuthorsCodeLens(e.languageId,o,S,n,s,!0,K(o),b.authors.command))}}return C}catch(e){var p=e,b=!0}finally{t=p,s=b,o="function"==typeof SuppressedError?SuppressedError:function(e,n,t,i){return(i=Error(t)).name="SuppressedError",i.error=e,i.suppressed=n,i},u=e=>t=s?new o(e,t,"An error was suppressed during disposal"):(s=!0,e),(g=e=>{for(;e=y.pop();)try{var n=e[1]&&e[1].call(e[2]);if(e[0])return Promise.resolve(n).then(g,e=>(u(e),g()))}catch(e){u(e)}if(s)throw t})()}}getValidateSymbolRange(e,n,t,s){let o,r=!1,a=i.SymbolKind[e.kind].toLowerCase();switch(e.kind){case i.SymbolKind.File:(n.scopes.includes("containers")||n.symbolScopes.includes(a))&&(r=!n.symbolScopes.includes(`!${a}`)),r&&(o=t());break;case i.SymbolKind.Package:(n.scopes.includes("containers")||n.symbolScopes.includes(a))&&(r=!n.symbolScopes.includes(`!${a}`)),r&&0===(o=K(e)).start.line&&0===o.end.line&&(o=t());break;case i.SymbolKind.Class:case i.SymbolKind.Interface:case i.SymbolKind.Module:case i.SymbolKind.Namespace:case i.SymbolKind.Struct:(n.scopes.includes("containers")||n.symbolScopes.includes(a))&&(o=K(e),r=!n.symbolScopes.includes(`!${a}`)&&(s||!o.isSingleLine));break;case i.SymbolKind.Constructor:case i.SymbolKind.Enum:case i.SymbolKind.Function:case i.SymbolKind.Method:case i.SymbolKind.Property:(n.scopes.includes("blocks")||n.symbolScopes.includes(a))&&(o=K(e),r=!n.symbolScopes.includes(`!${a}`)&&(s||!o.isSingleLine));break;case i.SymbolKind.String:(n.symbolScopes.includes(a)||"markdown"===n.language&&n.scopes.includes("containers"))&&(o=K(e),r=!n.symbolScopes.includes(`!${a}`)&&(s||!o.isSingleLine));break;default:n.symbolScopes.includes(a)&&(o=K(e),r=!n.symbolScopes.includes(`!${a}`)&&(s||!o.isSingleLine))}return r?o??K(e):void 0}provideCodeLens(e,n,t,s,o,r,a,l,u,d){try{let m,g=this.getValidateSymbolRange(t,s,o,l.includeSingleLineSymbols);if(void 0===g)return;let h=n.lineAt(K(t).start);if(e.length&&e[e.length-1].range.start.line===h.lineNumber)return;let y=0;if((u||l.recentChange.enabled)&&(u||(m=(0,c.Oo)(()=>this.container.git.getBlameRange(r,a,g))),e.push(new GitRecentChangeCodeLens(n.languageId,t,a,l.dateFormat,m,g,!1,h.range.with(new i.Position(h.range.start.line,y)),l.recentChange.command,d)),y++),l.authors.enabled){let s=!g.isSingleLine;if(!s&&"csharp"===n.languageId)switch(t.kind){case i.SymbolKind.File:break;case i.SymbolKind.Package:case i.SymbolKind.Module:case i.SymbolKind.Namespace:case i.SymbolKind.Class:case i.SymbolKind.Interface:case i.SymbolKind.Constructor:case i.SymbolKind.Method:case i.SymbolKind.Function:case i.SymbolKind.Enum:s=!0}s&&!u&&(void 0===m&&(m=(0,c.Oo)(()=>this.container.git.getBlameRange(r,a,g))),e.push(new GitAuthorsCodeLens(n.languageId,t,a,m,g,!1,h.range.with(new i.Position(h.range.start.line,y)),l.authors.command)))}}finally{if(P(t))for(let i of t.children)this.provideCodeLens(e,n,i,s,o,r,a,l,u,d)}}resolveCodeLens(e,n){return e instanceof GitRecentChangeCodeLens?this.resolveGitRecentChangeCodeLens(e,n):e instanceof GitAuthorsCodeLens?this.resolveGitAuthorsCodeLens(e,n):Promise.reject(void 0)}resolveGitRecentChangeCodeLens(e,n){let t=e.getBlame();if(null==t)return k("Unknown, (Blame failed)",e);let s=(0,u.$1)(t.commits.values());if(null==s)return k("Unknown, (Blame failed)",e);let o=`${s.author.name}, ${null==e.dateFormat?s.formattedDate:s.formatDate(e.dateFormat)}`;if(a.H.get("debug")&&(o+=` [${e.languageId}: ${i.SymbolKind[e.symbol.kind]}(${e.range.start.character}-${e.range.end.character}${e.symbol.containerName?`|${e.symbol.containerName}`:""}), Lines (${e.blameRange.start.line+1}-${e.blameRange.end.line+1}), Commit (${s.shortSha})]`),!1===e.desiredCommand)return k(o,e);switch(e.desiredCommand){case"gitlens.copyRemoteCommitUrl":return p(o,e,s,!0);case"gitlens.copyRemoteFileUrl":return b(o,e,s,!0);case"gitlens.diffWithPrevious":return y(o,e,s);case"gitlens.openCommitOnRemote":return p(o,e,s);case"gitlens.openFileOnRemote":return b(o,e,s);case"gitlens.revealCommitInView":return f(o,e,s);case"gitlens.showCommitsInView":return C(o,e,t,s);case"gitlens.showQuickCommitDetails":return S(o,e,s);case"gitlens.showQuickCommitFileDetails":return v(o,e,s);case"gitlens.showQuickRepoHistory":return w(o,e);case"gitlens.showQuickFileHistory":return L(o,e);case"gitlens.toggleFileBlame":return F(o,e);case"gitlens.toggleFileChanges":return R(o,e,s);case"gitlens.toggleFileChangesOnly":return R(o,e,s,!0);case"gitlens.toggleFileHeatmap":return $(o,e);default:return e}}resolveGitAuthorsCodeLens(e,n){let t=e.getBlame();if(null==t)return k("? authors (Blame failed)",e);let s=t.authors.size,o=(0,u.$1)(t.authors.values())?.name??"Unknown",r=s>1?` and ${(0,g.td)("one other",s-1,{only:!0,plural:"others"})}`:"",l=`${(0,g.td)("author",s,{zero:"?"})} (${o}${r})`;if(a.H.get("debug")&&(l+=` [${e.languageId}: ${i.SymbolKind[e.symbol.kind]}(${e.range.start.character}-${e.range.end.character}${e.symbol.containerName?`|${e.symbol.containerName}`:""}), Lines (${e.blameRange.start.line+1}-${e.blameRange.end.line+1}), Authors (${(0,u.fj)((0,u.Tj)(t.authors.values(),e=>e.name),", ")})]`),!1===e.desiredCommand)return k(l,e);let c=(0,u.I6)(t.commits.values(),e=>e.author.name===o)??(0,u.$1)(t.commits.values());if(null==c)return k(l,e);switch(e.desiredCommand){case"gitlens.copyRemoteCommitUrl":return p(l,e,c,!0);case"gitlens.copyRemoteFileUrl":return b(l,e,c,!0);case"gitlens.diffWithPrevious":return y(l,e,c);case"gitlens.openCommitOnRemote":return p(l,e,c);case"gitlens.openFileOnRemote":return b(l,e,c);case"gitlens.revealCommitInView":return f(l,e,c);case"gitlens.showCommitsInView":return C(l,e,t);case"gitlens.showQuickCommitDetails":return S(l,e,c);case"gitlens.showQuickCommitFileDetails":return v(l,e,c);case"gitlens.showQuickRepoHistory":return w(l,e);case"gitlens.showQuickFileHistory":return L(l,e);case"gitlens.toggleFileBlame":return F(l,e);case"gitlens.toggleFileChanges":return R(l,e,c);case"gitlens.toggleFileChangesOnly":return R(l,e,c,!0);case"gitlens.toggleFileHeatmap":return $(l,e);default:return e}}getDirtyTitle(e){return e.recentChange.enabled&&e.authors.enabled?a.H.get("strings.codeLens.unsavedChanges.recentChangeAndAuthors"):e.recentChange.enabled?a.H.get("strings.codeLens.unsavedChanges.recentChangeOnly"):a.H.get("strings.codeLens.unsavedChanges.authorsOnly")}};function y(e,n,t){return n.command=(0,r.gu)("gitlens.diffWithPrevious",e,void 0,{commit:t,uri:n.uri.toFileUri()}),n}function p(e,n,t,i=!1){return n.command=(0,r.gu)("gitlens.openOnRemote",e,{resource:{type:o.J.Commit,sha:t.sha},repoPath:t.repoPath,clipboard:i}),n}function b(e,n,t,i=!1){return n.command=(0,r.gu)("gitlens.openOnRemote",e,{resource:{type:o.J.Revision,fileName:t.file?.path??"",sha:t.sha},repoPath:t.repoPath,clipboard:i}),n}function f(e,n,t){return n.command=(0,r.gu)(t?.isUncommitted?"":"gitlens.revealCommitInView",e,n.uri.toFileUri(),{commit:t,sha:void 0===t?void 0:t.sha}),n}function C(e,n,t,i){let s;return s=void 0===i?[...(0,u.x1)(t.commits.values(),e=>e.isUncommitted?void 0:e.ref)]:[i.ref],n.command=(0,r.gu)(0===s.length?"":"gitlens.showCommitsInView",e,{repoPath:t.repoPath,refs:s}),n}function S(e,n,t){return n.command=(0,r.gu)(t?.isUncommitted?"":"gitlens.showQuickCommitDetails",e,n.uri.toFileUri(),{commit:t,sha:void 0===t?void 0:t.sha}),n}function v(e,n,t){return n.command=(0,r.gu)(t?.isUncommitted?"":"gitlens.showQuickCommitFileDetails",e,n.uri.toFileUri(),{commit:t,sha:void 0===t?void 0:t.sha}),n}function w(e,n){return n.command=(0,r.gu)("gitlens.showQuickRepoHistory",e,n.uri.toFileUri()),n}function L(e,n){return n.command=(0,r.gu)("gitlens.showQuickFileHistory",e,n.uri.toFileUri(),{range:n.isFullRange?void 0:n.blameRange}),n}function F(e,n){return n.command=(0,r.gu)("gitlens.toggleFileBlame",e,n.uri.toFileUri()),n}function R(e,n,t,i){return n.command=(0,r.gu)("gitlens.toggleFileChanges",e,n.uri.toFileUri(),{type:"changes",context:{sha:t.sha,only:i,selection:!1}}),n}function $(e,n){return n.command=(0,r.gu)("gitlens.toggleFileHeatmap",e,n.uri.toFileUri()),n}function k(e,n){return n.command={title:e,command:""},n}function K(e){return P(e)?e.range:e.location.range}function P(e){return(0,c.is)(e,"children")}}};